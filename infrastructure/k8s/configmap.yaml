# ERP System - Configuration Maps

apiVersion: v1
kind: ConfigMap
metadata:
  name: erp-system-config
  namespace: erp-system
  labels:
    app.kubernetes.io/name: erp-system
    app.kubernetes.io/component: config
    app.kubernetes.io/version: "1.0.0"
data:
  # Application Configuration (TOML format)
  app.toml: |
    [server]
    host = "0.0.0.0"
    port = 8080
    workers = 4

    [database]
    max_connections = 50
    min_connections = 5
    connection_timeout = 30
    idle_timeout = 600

    [redis]
    max_connections = 20
    connection_timeout = 5
    idle_timeout = 300

    [jwt]
    access_token_expiry = 3600
    refresh_token_expiry = 604800

    [security]
    bcrypt_cost = 12
    session_timeout = 1800

    [cors]
    allowed_methods = ["GET", "POST", "PUT", "DELETE", "OPTIONS"]
    allowed_headers = ["Content-Type", "Authorization", "X-Requested-With", "X-Tenant-ID"]
    expose_headers = ["X-Request-ID"]
    allow_credentials = true
    max_age = 3600

    [email]
    provider = "smtp"
    from_name = "ERP System"

    [logging]
    level = "info"
    format = "json"

    [features]
    registration_enabled = false
    email_verification_required = true
    two_factor_auth_enabled = true
    audit_logging = true
    rate_limiting = true

    [monitoring]
    metrics_enabled = true
    health_check_interval = 30
    performance_monitoring = true

  # Environment-specific settings
  environment: "production"
  rust_log: "info,erp_api=debug,erp_auth=debug,erp_core=debug"
  rust_backtrace: "1"

  # Database settings (non-sensitive)
  db_max_connections: "50"
  db_min_connections: "5"
  db_connection_timeout: "30"

  # Redis settings (non-sensitive)
  redis_max_connections: "20"
  redis_connection_timeout: "5"

  # Feature flags
  feature_registration_enabled: "false"
  feature_email_verification: "true"
  feature_two_factor_auth: "true"
  feature_audit_logging: "true"
  feature_rate_limiting: "true"

---
# Nginx Configuration for reverse proxy
apiVersion: v1
kind: ConfigMap
metadata:
  name: nginx-config
  namespace: erp-system
  labels:
    app.kubernetes.io/name: erp-system
    app.kubernetes.io/component: nginx-config
data:
  nginx.conf: |
    user nginx;
    worker_processes auto;
    error_log /var/log/nginx/error.log notice;
    pid /var/run/nginx.pid;

    events {
        worker_connections 1024;
        use epoll;
        multi_accept on;
    }

    http {
        include /etc/nginx/mime.types;
        default_type application/octet-stream;

        # Logging format
        log_format main '$remote_addr - $remote_user [$time_local] "$request" '
                       '$status $body_bytes_sent "$http_referer" '
                       '"$http_user_agent" "$http_x_forwarded_for" '
                       'rt=$request_time uct="$upstream_connect_time" '
                       'uht="$upstream_header_time" urt="$upstream_response_time"';

        access_log /var/log/nginx/access.log main;

        # Performance settings
        sendfile on;
        tcp_nopush on;
        tcp_nodelay on;
        keepalive_timeout 65;
        types_hash_max_size 2048;
        client_max_body_size 50M;

        # Gzip compression
        gzip on;
        gzip_vary on;
        gzip_min_length 10240;
        gzip_proxied expired no-cache no-store private must-revalidate auth;
        gzip_types
            application/javascript
            application/json
            application/ld+json
            application/xml
            text/css
            text/javascript
            text/plain
            text/xml;

        # Rate limiting
        limit_req_zone $binary_remote_addr zone=api:10m rate=10r/s;
        limit_req_zone $binary_remote_addr zone=auth:10m rate=5r/s;

        # Upstream backend
        upstream erp_backend {
            server erp-api-service:8080;
            keepalive 32;
        }

        server {
            listen 80;
            server_name _;

            # Security headers
            add_header X-Frame-Options DENY always;
            add_header X-Content-Type-Options nosniff always;
            add_header X-XSS-Protection "1; mode=block" always;
            add_header Referrer-Policy "strict-origin-when-cross-origin" always;
            add_header Content-Security-Policy "default-src 'self'; script-src 'self' 'unsafe-inline'; style-src 'self' 'unsafe-inline'; img-src 'self' data: https:; font-src 'self'; connect-src 'self'; frame-ancestors 'none';" always;
            add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;

            # Health check (no rate limiting)
            location /health {
                proxy_pass http://erp_backend;
                proxy_set_header Host $host;
                proxy_set_header X-Real-IP $remote_addr;
                proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
                proxy_set_header X-Forwarded-Proto $scheme;
                access_log off;
            }

            # Ready check
            location /ready {
                proxy_pass http://erp_backend;
                proxy_set_header Host $host;
                proxy_set_header X-Real-IP $remote_addr;
                proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
                proxy_set_header X-Forwarded-Proto $scheme;
                access_log off;
            }

            # Metrics endpoint (internal only)
            location /metrics {
                allow 10.0.0.0/8;
                allow 172.16.0.0/12;
                allow 192.168.0.0/16;
                deny all;

                proxy_pass http://erp_backend;
                proxy_set_header Host $host;
                proxy_set_header X-Real-IP $remote_addr;
                proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
                proxy_set_header X-Forwarded-Proto $scheme;
            }

            # Auth endpoints (stricter rate limiting)
            location /api/v1/auth {
                limit_req zone=auth burst=10 nodelay;
                limit_req_status 429;

                proxy_pass http://erp_backend;
                proxy_set_header Host $host;
                proxy_set_header X-Real-IP $remote_addr;
                proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
                proxy_set_header X-Forwarded-Proto $scheme;
                proxy_set_header Connection "";
                proxy_http_version 1.1;

                proxy_connect_timeout 5s;
                proxy_send_timeout 10s;
                proxy_read_timeout 30s;
            }

            # API endpoints (general rate limiting)
            location /api/ {
                limit_req zone=api burst=20 nodelay;
                limit_req_status 429;

                proxy_pass http://erp_backend;
                proxy_set_header Host $host;
                proxy_set_header X-Real-IP $remote_addr;
                proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
                proxy_set_header X-Forwarded-Proto $scheme;
                proxy_set_header Connection "";
                proxy_http_version 1.1;

                proxy_connect_timeout 5s;
                proxy_send_timeout 60s;
                proxy_read_timeout 60s;

                # Buffer settings
                proxy_buffering on;
                proxy_buffer_size 4k;
                proxy_buffers 8 4k;
            }

            # Swagger UI
            location /swagger-ui {
                proxy_pass http://erp_backend;
                proxy_set_header Host $host;
                proxy_set_header X-Real-IP $remote_addr;
                proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
                proxy_set_header X-Forwarded-Proto $scheme;
            }

            # API docs
            location /api-docs {
                proxy_pass http://erp_backend;
                proxy_set_header Host $host;
                proxy_set_header X-Real-IP $remote_addr;
                proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
                proxy_set_header X-Forwarded-Proto $scheme;
            }

            # Default route
            location / {
                return 404 '{"error": "Not Found", "message": "The requested resource was not found"}';
                add_header Content-Type application/json;
            }

            # Custom error pages
            error_page 404 /404.json;
            error_page 500 502 503 504 /50x.json;

            location = /404.json {
                internal;
                return 404 '{"error": "Not Found", "message": "The requested resource was not found"}';
                add_header Content-Type application/json;
            }

            location = /50x.json {
                internal;
                return 500 '{"error": "Internal Server Error", "message": "An internal server error occurred"}';
                add_header Content-Type application/json;
            }
        }
    }

---
# Prometheus configuration for monitoring
apiVersion: v1
kind: ConfigMap
metadata:
  name: prometheus-config
  namespace: erp-system
  labels:
    app.kubernetes.io/name: erp-system
    app.kubernetes.io/component: prometheus-config
data:
  prometheus.yml: |
    global:
      scrape_interval: 15s
      evaluation_interval: 15s

    rule_files:
      - "/etc/prometheus/rules/*.yml"

    scrape_configs:
      # ERP API metrics
      - job_name: 'erp-api'
        static_configs:
          - targets: ['erp-api-service:8080']
        metrics_path: '/metrics'
        scrape_interval: 10s

      # Kubernetes API server
      - job_name: 'kubernetes-apiservers'
        kubernetes_sd_configs:
          - role: endpoints
        scheme: https
        tls_config:
          ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
        bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token
        relabel_configs:
          - source_labels: [__meta_kubernetes_namespace, __meta_kubernetes_service_name, __meta_kubernetes_endpoint_port_name]
            action: keep
            regex: default;kubernetes;https

      # Kubernetes nodes
      - job_name: 'kubernetes-nodes'
        kubernetes_sd_configs:
          - role: node
        scheme: https
        tls_config:
          ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
        bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token
        relabel_configs:
          - action: labelmap
            regex: __meta_kubernetes_node_label_(.+)

      # Kubernetes pods
      - job_name: 'kubernetes-pods'
        kubernetes_sd_configs:
          - role: pod
        relabel_configs:
          - source_labels: [__meta_kubernetes_pod_annotation_prometheus_io_scrape]
            action: keep
            regex: true
          - source_labels: [__meta_kubernetes_pod_annotation_prometheus_io_path]
            action: replace
            target_label: __metrics_path__
            regex: (.+)
          - source_labels: [__address__, __meta_kubernetes_pod_annotation_prometheus_io_port]
            action: replace
            regex: ([^:]+)(?::\d+)?;(\d+)
            replacement: $1:$2
            target_label: __address__
          - action: labelmap
            regex: __meta_kubernetes_pod_label_(.+)
          - source_labels: [__meta_kubernetes_namespace]
            action: replace
            target_label: kubernetes_namespace
          - source_labels: [__meta_kubernetes_pod_name]
            action: replace
            target_label: kubernetes_pod_name

---
# Grafana dashboard configuration
apiVersion: v1
kind: ConfigMap
metadata:
  name: grafana-dashboards
  namespace: erp-system
  labels:
    app.kubernetes.io/name: erp-system
    app.kubernetes.io/component: grafana-dashboards
    grafana_dashboard: "1"
data:
  erp-system-dashboard.json: |
    {
      "dashboard": {
        "id": null,
        "title": "ERP System Dashboard",
        "tags": ["erp", "system"],
        "timezone": "browser",
        "panels": [
          {
            "id": 1,
            "title": "Request Rate",
            "type": "graph",
            "targets": [
              {
                "expr": "rate(http_requests_total{job=\"erp-api\"}[5m])",
                "legendFormat": "{{method}} {{status_code}}"
              }
            ],
            "yAxes": [
              {
                "label": "Requests/sec"
              }
            ]
          },
          {
            "id": 2,
            "title": "Response Time",
            "type": "graph",
            "targets": [
              {
                "expr": "histogram_quantile(0.95, rate(http_request_duration_seconds_bucket{job=\"erp-api\"}[5m]))",
                "legendFormat": "95th percentile"
              },
              {
                "expr": "histogram_quantile(0.50, rate(http_request_duration_seconds_bucket{job=\"erp-api\"}[5m]))",
                "legendFormat": "50th percentile"
              }
            ],
            "yAxes": [
              {
                "label": "Duration (s)"
              }
            ]
          },
          {
            "id": 3,
            "title": "Error Rate",
            "type": "graph",
            "targets": [
              {
                "expr": "rate(http_requests_total{job=\"erp-api\",status_code=~\"5..\"}[5m]) / rate(http_requests_total{job=\"erp-api\"}[5m])",
                "legendFormat": "Error Rate"
              }
            ],
            "yAxes": [
              {
                "label": "Error Rate (%)",
                "max": 1,
                "min": 0
              }
            ]
          }
        ],
        "time": {
          "from": "now-1h",
          "to": "now"
        },
        "refresh": "5s"
      }
    }